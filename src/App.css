/* App.css */
:root {
  --grid-size: 50; /* Define the grid size variable */
}

.App {
  text-align: center;
}

.App-header {
  font-size: 1.5rem; /* Smaller font size */
  margin-bottom: 1px; /* Space between the title and controls */
}

.game-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.controls {
  display: flex;
  flex-direction: column; /* Column layout */
  align-items: center; /* Center items horizontally */
  position: fixed; /* Use fixed positioning */
  bottom: 0;
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Adjust to center */
  z-index: 1000; /* Ensure it stays on top of other content */
  padding: 10px; /* Add some padding */
  background-color: darkslategrey; /* Optional: to ensure it doesn't overlap with other content */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Optional: add a shadow for better visibility */
  border-radius: 10px; /* Add rounded corners */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
  width: auto; /* Make the width auto to fit the content */
}

.game-title {
  font-size: 1rem; /* Same size as button text */
  margin-bottom: 5px; /* Space between the title and buttons */
}

.score-outages {
  display: flex;
  flex-direction: row; /* Column layout */
  align-items: center; /* Center items horizontally */
  margin-bottom: 10px; /* Space between score/outages and buttons */
  margin-top: 1px;
}

.button-container {
  display: flex;
  flex-direction: row; /* Row layout */
  justify-content: center; /* Center buttons horizontally */
  flex-wrap: wrap; /* Wrap buttons to the next line if needed */
}

.controls button.selected {
  border: 2px solid yellow;
}

.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-size), 1fr); /* Use the CSS variable */
  grid-template-rows: repeat(var(--grid-size), 1fr); /* Use the CSS variable */
  gap: 0.1vw; /* Adjusted to use viewport width */
  margin: 1vw auto; /* Adjusted to use viewport width */
  width: 80vw; /* Adjusted to use viewport width */
  height: 80vw; /* Adjusted to use viewport width to maintain aspect ratio */
}

/* Media query for mobile devices */
@media (max-width: 600px) {
  .controls {
    flex-direction: column; /* Stack buttons vertically on small screens */
    bottom: 0;
    left: 0;
  }
}

.tile {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box; /* Include border in the element's total width and height */
}

.tile.powered {
  border: 2px solid yellow;
}

.tile.unpowered {
  border: 2px solid red;
}

.game-piece {
  width: 80%; /* Adjusted to be relative to the tile */
  height: 80%; /* Adjusted to be relative to the tile */
  aspect-ratio: 1 / 1; /* Ensure the game piece is square */
  box-sizing: border-box; /* Include border in the element's total width and height */
}

.game-piece.source {
  background-color: blue;
}

.game-piece.source.off {
  background-color: darkblue;
}

.game-piece.conduit {
  background-color: darkolivegreen;
}

.game-piece.sink {
  background-color: orange;
}

.game-piece.powered {
  border: 0.1vw solid yellow; /* Adjusted to use viewport width */
}

.game-piece.switch {
  background-color: yellowgreen;
}

.game-piece.switch.off {
  background-color: darkred;
}

.game-piece.capacitor {
  background-color: plum;
}

.game-piece.capacitor.off {
  background-color: purple;
}

.score {
  margin-top: .1vw; /* Adjusted to use viewport width */
}